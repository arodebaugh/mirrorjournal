{"ast":null,"code":"import _asyncToGenerator from \"/Users/andrewrodebaugh/Downloads/think-app-master/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { IonicModule } from '@ionic/angular';\nimport { Preferences } from '@capacitor/preferences';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"./theme-watch.service\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platform, themeWatch) {\n      this.platform = platform;\n      this.themeWatch = themeWatch;\n      this.initializeApp();\n    }\n\n    initializeApp() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.platform.ready().then(() => {\n          SplashScreen.hide();\n          IonicModule.forRoot({\n            swipeBackEnabled: true\n          });\n        });\n\n        const tempTheme = yield Preferences.get({\n          key: 'theme'\n        });\n\n        if (tempTheme) {\n          _this.theme = tempTheme.value;\n        }\n\n        _this.themeWatch.getEmittedValue().subscribe(item => {\n          _this.theme = item;\n        });\n      })();\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform), i0.ɵɵdirectiveInject(i2.ThemeWatchService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\", 0);\n        i0.ɵɵelement(1, \"ion-router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"id\", ctx.theme);\n      }\n    },\n    dependencies: [i1.IonApp, i1.IonRouterOutlet]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}