{"ast":null,"code":"import { Pipe, NgModule } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nimport * as ɵngcc0 from '@angular/core';\nconst defaultTrailing = '…';\n/** @type {?} */\n\nconst defaultLength = 40;\nlet TruncateCharactersPipe = /*#__PURE__*/(() => {\n  class TruncateCharactersPipe {\n    /**\n     * @param {?} value\n     * @param {...?} options\n     * @return {?}\n     */\n    transform(value, ...options) {\n      /** @type {?} */\n      const limit = options[0] || defaultLength;\n      /** @type {?} */\n\n      let trailingString = '';\n      /** @type {?} */\n\n      let countTrailing = false;\n\n      if (!value) {\n        value = '';\n      }\n\n      if (options && options[1] && typeof options[1] === 'object') {\n        trailingString = options[1].trailingString || defaultTrailing;\n        countTrailing = options[1].countTrailing || false;\n      } else {\n        trailingString = options[1] || defaultTrailing;\n        countTrailing = options[2] || false;\n      }\n      /** @type {?} */\n\n\n      let stringLength = this.getStringLength(limit, trailingString, countTrailing);\n\n      if (stringLength < 0) {\n        stringLength *= -1;\n        return value.length > stringLength ? trailingString + value.substring(value.length - stringLength, value.length) : value;\n      } else {\n        return value.length > stringLength ? value.substring(0, stringLength) + trailingString : value;\n      }\n    }\n    /**\n     * @private\n     * @param {?} limit\n     * @param {?} trail\n     * @param {?=} countTrailing\n     * @return {?}\n     */\n\n\n    getStringLength(limit, trail, countTrailing = false) {\n      if (countTrailing) {\n        if (limit < 0) {\n          return limit + trail.length;\n        } else {\n          return limit - trail.length;\n        }\n      }\n\n      return limit;\n    }\n\n  }\n\n  TruncateCharactersPipe.ɵfac = function TruncateCharactersPipe_Factory(t) {\n    return new (t || TruncateCharactersPipe)();\n  };\n\n  TruncateCharactersPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"truncate\",\n    type: TruncateCharactersPipe,\n    pure: true\n  });\n  return TruncateCharactersPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet TruncateWordsPipe = /*#__PURE__*/(() => {\n  class TruncateWordsPipe {\n    /**\n     * @param {?} value\n     * @param {?=} limit\n     * @param {?=} trail\n     * @return {?}\n     */\n    transform(value, limit = 40, trail = '…') {\n      /** @type {?} */\n      let result = value || '';\n\n      if (value) {\n        /** @type {?} */\n        const words = value.split(/\\s+/);\n\n        if (words.length > Math.abs(limit)) {\n          if (limit < 0) {\n            limit *= -1;\n            result = trail + words.slice(words.length - limit, words.length).join(' ');\n          } else {\n            result = words.slice(0, limit).join(' ') + trail;\n          }\n        }\n      }\n\n      return result;\n    }\n\n  }\n\n  TruncateWordsPipe.ɵfac = function TruncateWordsPipe_Factory(t) {\n    return new (t || TruncateWordsPipe)();\n  };\n\n  TruncateWordsPipe.ɵpipe = /*@__PURE__*/ɵngcc0.ɵɵdefinePipe({\n    name: \"words\",\n    type: TruncateWordsPipe,\n    pure: true\n  });\n  return TruncateWordsPipe;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst TRUNCATE_PIPES = [TruncateCharactersPipe, TruncateWordsPipe];\nlet TruncateModule = /*#__PURE__*/(() => {\n  class TruncateModule {}\n\n  TruncateModule.ɵfac = function TruncateModule_Factory(t) {\n    return new (t || TruncateModule)();\n  };\n\n  TruncateModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TruncateModule\n  });\n  TruncateModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  return TruncateModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TruncateModule, {\n    declarations: [TruncateCharactersPipe, TruncateWordsPipe],\n    exports: [TruncateCharactersPipe, TruncateWordsPipe]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { TRUNCATE_PIPES, TruncateModule, TruncateCharactersPipe as ɵa, TruncateWordsPipe as ɵb }; //# sourceMappingURL=yellowspot-ng-truncate.js.map","map":null,"metadata":{},"sourceType":"module"}